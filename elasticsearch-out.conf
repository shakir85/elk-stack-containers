input {
	file {
		path => "/home/shakir/elk-bin/logstash-7.15.0/event-data/apache_*.log"
		start_position => "beginning"
	}

	http {

	}
}

filter {
	if [headers][request_path] =~ "error" or [path] =~ "errors" {
		mutate {
			replace => { type => "error" }
		}
	} else {
		mutate {
			replace => { type => "access" }
		}

		grok {
			match => { "message" => '%{HTTPD_COMMONLOG} "%{GREEDYDATA:referrer}" "%{GREEDYDATA:agent}"' }
		}

		if "_grokparsefailure" in [tags] {
			drop { }
		}

		useragent {
			# agent is a field name from the grok pattern
			source => "agent"
			# assigning what we captrued from the 'agent' to a new field called 'ua'
			target => "ua"
		}

		# Ignoring admin pages
		if [request] =~ /^\/admin\// {
			drop { }
		}

		# Remove static files
		if [request] =~ /^\/js\//
			or [request] =~ /^\/css\//
			or [request] in [ "/robots.txt", "favicon.ico" ] {
				drop { }
			}
			
		# Crawler
		if [ua][device] == "Spider" {
			drop { }
		}

		mutate {
			convert => {
				"response" => "integer"
				"bytes" => "integer"
			}
		}

		date {
			match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
			remove_field => [ "timestamp" ]
		}
		
		geoip {
			# clientip is a field name from the grok pattern
			source => "clientip"
		}
	}

	mutate {
		remove_field => [ "headers", "@version", "host" ]
	}
}

output {
	elasticsearch {
		hosts => [ "localhost:9200" ]
		# index => "%{type}-%{+YYYY.MM.dd}"
		document_type => "default"
		http_compression => true
	}
}
